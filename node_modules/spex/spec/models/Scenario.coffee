## a **Scenario** consists of an annotation and a code block

class Scenario
  constructor: (@id , @name, @code, @leadspace) ->
    if !@id? then throw new Error "Scenario was not passed an *id*"
    @status = 'notrun'

#  pass: -> @status = 'pass'
#  fail: (@error) -> @status = 'fail'


module.exports = Scenario

### TEST

should = require 'should'

#>> When we create a new Scenario

scenario = new Scenario 1, "foo", "foo = 'foo'"

#>> Then

scenario.id.should.equal 1
scenario.name.should.equal "foo"
scenario.code.should.equal "foo = 'foo'"
scenario.status.should.equal 'notrun'

#

#>> When we create a Scenario with no id

try scenario = new Scenario null, "foo", "foo = 'foo'"

#>> Then It should fail

catch error
  error.message.should.equal "no id"

#

#>> Given a valid scenario
scenario = new Scenario 1, "foo", "foo = 'foo'"
#>> When we say the scenario passed
scenario.pass()
#>> Then
scenario.status.should.equal 'pass'

#>> Given a valid scenario
scenario = new Scenario 1, "foo", "foo = 'foo'"
#>> When we say the scenario failed
scenario.fail()
#>> Then
scenario.status.should.equal 'fail'

#>> Given an valid scenario that makes an error
scenario = new Scenario 1, "foo", "foo = 'foo'"
#>> When we say the scenario failed
scenario.fail("You suck")
#>> Then
scenario.status.should.equal 'fail'
scenario.error.should.equal 'You suck'

