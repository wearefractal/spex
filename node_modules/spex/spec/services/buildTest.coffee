coffee = require 'coffee-script'
async = require 'async'

buildTest = (scenarios, @isCoffee) ->

  @testCode = ''

  build = (scenario, done) ->
    nextScenario ?= scenarios[ scenario.id + 1 ]
    @testCode +=
    "#{ scenario.leadspace }Error.prototype.spex.scenarioId = #{ scenario.id }\n" +
    "#{ scenario.leadspace }#{ scenario.code }\n" +
    "#{ nextScenario?.leadspace || scenario.leadspace }spex.pass #{ scenario.id }\n"
    done()

  async.forEachSeries scenarios, build, (err) -> if err? then log.error "buildtest - #{ err }"

  return @testCode


module.exports = buildTest

### TEST

should = require 'should'
Scenario = require('spex').load 'spec.models.Scenario'

#>> Given some Scenarios

scenarios = []
scenarios.push new Scenario 0, 'foo1', 'foo = "fo222o"', "  "
scenarios.push new Scenario 1, 'foo2', 'foo = "fdddoo"', "  "
scenarios.push new Scenario 2, 'foo3', 'foo = "fdddoo"', "    "

#>> When I run buildTest

testCode = buildTest scenarios, true

#>> Then

testCode.trim().should.equal(
 'Error.prototype.spex.scenarioId = 0\n
  foo = "fo222o"\n
  spex.pass 0\n
  Error.prototype.spex.scenarioId = 1\n
  foo = "fdddoo"\n
  spex.pass 1\n
    Error.prototype.spex.scenarioId = 2\n
    foo = "fdddoo"\n
  spex.pass 2'
)

