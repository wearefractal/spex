log = require 'node-log'
async = require 'async'
coffee = require 'coffee-script'

buildTest = (scenarios, isCoffee) ->

  @testCode = ''

  scenarios.map (scenario) =>
    nextScenario ?= scenarios[ scenario.id + 1 ]
    @testCode +=
    "#{ scenario.leadspace }Error.prototype.spexScenarioId = #{ scenario.id }\n" +
    "#{ scenario.leadspace }#{ scenario.code }\n" +
    "#{ nextScenario?.leadspace || scenario.leadspace }@spex.pass #{ scenario.id }\n"

  if isCoffee then @testCode = coffee.compile @testCode, {bare: true} # bare strips the default closure container

  return @testCode


module.exports = buildTest

### TEST

should = require 'should'
Scenario = require('spex').load 'spec.models.Scenario'

#>> Given some Scenarios

scenarios = []
scenarios.push new Scenario 0, 'foo1', 'foo = "fo222o"', "  "
scenarios.push new Scenario 1, 'foo2', 'foo = "fdddoo"', "  "
scenarios.push new Scenario 2, 'foo3', 'foo = "fdddoo"', "    "

#>> When I run buildTest

testCode = buildTest scenarios, true

#>> Then

testCode.trim().should.equal(
 'Error.prototype.spex.scenarioId = 0\n
  foo = "fo222o"\n
  spex.pass 0\n
  Error.prototype.spex.scenarioId = 1\n
  foo = "fdddoo"\n
  spex.pass 1\n
    Error.prototype.spex.scenarioId = 2\n
    foo = "fdddoo"\n
  spex.pass 2'
)

